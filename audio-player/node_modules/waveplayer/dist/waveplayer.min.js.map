{"version":3,"file":"waveplayer.min.js","sources":["../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../src/Mediator.js","../node_modules/@babel/runtime/helpers/typeof.js","../src/lib/index.js","../src/WaveView.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/@babel/runtime/regenerator/index.js","../src/Playlist.js","../src/WavePlayer.js"],"sourcesContent":["function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","class Mediator {\n\n    /**\n     * The topics to subscribe to.\n     *\n     * @var {Object}\n     */\n    _topics;\n\n    constructor() {\n        this._topics = {};\n    }\n\n    /**\n     * Subscribe to the given topic with the given callback.\n     *\n     * @param  {string} topic\n     * @param  {Function} callback\n     * @returns {boolean}\n     */\n    on(topic, callback) {\n        if (!this._topics.hasOwnProperty(topic)) {\n            this._topics[topic] = [];\n        }\n        this._topics[topic].push(callback);\n\n        return true;\n    }\n\n    /**\n     * Unsubscibe the given callback from the given topic.\n     *\n     * @param  {string} topic\n     * @param  {Function} callback\n     * @returns {boolean}\n     */\n    un(topic, callback = null) {\n        // If the topic does not exist, return early\n        if (!this._topics.hasOwnProperty(topic)) {\n            return false;\n        }\n\n        // If a callback is provided, unsubscribe it, but keep the topic and any\n        // other callbacks currently registered\n        if (callback) {\n            for (let i = 0; i < this._topics[topic].length; i++) {\n                if (this._topics[topic][i] === callback) {\n                    this._topics[topic].splice(i, 1);\n                    return true;\n                }\n            }\n\n            // A callback was provided, but was not previously registered\n            return false;\n        }\n\n        // Delete the whole topic\n        delete this._topics[topic];\n\n        return true;\n    }\n\n    /**\n     * Unsubscribe from all topic.\n     *\n     * @returns {void}\n     */\n    unAll() {\n        this._topics = null;\n    }\n\n    /**\n     * Fire an event and evaluate any registered callbacks in response.\n     *\n     * @param  {string} topic\n     * @param  {mixed} args\n     * @returns {boolean}\n     */\n    fire(topic, ...args) {\n        if (!this._topics.hasOwnProperty(topic)) {\n            return false;\n        }\n\n        for (let i = 0; i < this._topics[topic].length; i++) {\n            this._topics[topic][i].apply(null, args);\n        }\n\n        return true;\n    }\n\n}\n\nexport default Mediator;\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/*********************\n * UTILITY FUNCTIONS *\n *********************/\n\n/**\n * Convert a hex color code to RGB format.\n *\n * @param  {string} hex\n * @returns {Object}\n */\nexport const hex2rgb = hex => {\n    const bigint = parseInt(\n        hex.charAt(0) === '#' ? hex.substring(1, 7) : hex, 16\n    );\n\n    return {r: (bigint >> 16) & 255, g: (bigint >> 8) & 255, b: bigint & 255};\n};\n\n/**\n * Convert a color in RGB format to a color in HSV format.\n *\n * @param  {Object} rgb\n * @returns {Object}\n */\nexport const rgb2hsv = rgb => {\n    const r = rgb.r / 255;\n    const g = rgb.g / 255;\n    const b = rgb.b / 255;\n    const v = Math.max(r, g, b);\n    const diff = v - Math.min(r, g, b);\n    const diffc = c => (v - c) / 6 / diff + 1 / 2;\n\n    if (diff === 0) {\n        return {h: 0, s: 0, v: Math.round(v * 100)};\n    }\n\n    let h;\n    const s = diff / v;\n    const rr = diffc(r);\n    const gg = diffc(g);\n    const bb = diffc(b);\n\n    if (r === v) {\n        h = bb - gg;\n    } else if (g === v) {\n        h = 1 / 3 + rr - bb;\n    } else if (b === v) {\n        h = 2 / 3 + gg - rr;\n    }\n\n    if (h < 0) {\n        h++;\n    } else if (h > 1) {\n        h--;\n    }\n\n    return {h: Math.round(h * 360), s: Math.round(s * 100), v: Math.round(v * 100)};\n};\n\n/**\n * Convert a color in HSV format to a color in RGB format.\n *\n * @param  {Object} hsv\n * @returns {Object}\n */\nexport const hsv2rgb = hsv => {\n    if (hsv.s === 0) {\n        return {r: hsv.v, g: hsv.v, b: hsv.v};\n    }\n\n    const h = hsv.h / 60;\n    const i = Math.floor(h);\n    const s = hsv.s / 100;\n    const v = hsv.v / 100 * 255;\n    const data = [\n        v * (1 - s),\n        v * (1 - s * (h - i)),\n        v * (1 - s * (1 - (h - i)))\n    ];\n    switch (i) {\n        case 0:\n            return {r: v, g: data[2], b: data[0]};\n        case 1:\n            return {r: data[1], g: v, b: data[0]};\n        case 2:\n            return {r: data[0], g: v, b: data[2]};\n        case 3:\n            return {r: data[0], g: data[1], b: v};\n        case 4:\n            return {r: data[2], g: data[0], b: v};\n        default:\n            return {r: v, g: data[0], b: data[1]};\n    }\n};\n\n/**\n * Fetch a JSON file from the given URL.\n *\n * @param  {string} url\n * @returns {Promise}\n */\nexport const getJSON = url => (\n    new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                if (xhr.status === 200) {\n                    resolve(JSON.parse(xhr.responseText));\n                } else {\n                    reject(new Error(xhr.statusText));\n                }\n            }\n        };\n        xhr.send();\n    })\n);\n\n/**\n * Convert a generator into a promise resolving state machine.\n *\n * @param  {Generator} generatorFunction\n * @returns {Promise}\n */\nexport const stateResolver = generatorFunction => (\n    function () {\n        const generator = generatorFunction.apply(this, arguments);\n        return new Promise((resolve, reject) => {\n            const resume = (method, value) => {\n                try {\n                    const result = generator[method](value);\n                    if (result.done) {\n                        resolve(result.value);\n                    } else {\n                        result.value.then(resumeNext, resumeThrow);\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            const resumeNext = resume.bind(null, 'next');\n            const resumeThrow = resume.bind(null, 'throw');\n            resumeNext();\n        });\n    }\n);\n\n/**\n * Set the CSS styles for the given element.\n *\n * @param  {Object} elm\n * @param  {Object} styles\n * @returns {Object}\n */\nexport const style = (elm, styles) => {\n    for (const key in styles) {\n        if (elm.style[key] !== styles[key]) {\n            elm.style[key] = styles[key];\n        }\n    }\n\n    return elm;\n};\n\n/**\n * Check if the given value is an object.\n *\n * @param  {mixed} value\n * @returns {boolean}\n */\nexport const isObject = value => {\n    const type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n};\n\n/**\n * Check if the given value is a string.\n *\n * @param  {mixed} value\n * @returns {boolean}\n */\nexport const isString = value => {\n    const type = typeof value;\n    return type === 'string'\n        || (type === 'object' && value !== null && !Array.isArray(value)\n            && Object.prototype.toString.call(value) === '[object String]');\n};\n","/**\n * WaveView.js\n *\n * © Michaël Dzjaparidze 2018\n * https://github.com/michaeldzjap\n *\n * Draws a waveform using the HTML5 canvas object\n *\n * This work is licensed under the ISC License (ISC)\n */\n\nimport Mediator from './Mediator.js';\nimport WavePlayer from './WavePlayer.js';\nimport {style, hex2rgb, rgb2hsv, hsv2rgb} from './lib/index.js';\n\nclass WaveView {\n\n    /**\n     * The default options for a new instance.\n     *\n     * @var {Object}\n     */\n    _defaultOptions = {\n        container: null,\n        width: 512,\n        height: 128,\n        waveColor: '#428bca',\n        progressColor: '#31708f',\n        barWidth: 4,\n        barGap: 1,\n        interact: true,\n        responsive: true,\n        progress: 0,\n        useGradient: true,\n    };\n\n    /**\n     * The amplitude data that will be used to draw the waveform.\n     *\n     * @var {Array|null}\n     */\n    _data = null;\n\n    /**\n     * The options for this waveview instance.\n     *\n     * @var {Object}\n     */\n    _options;\n\n    /**\n     * The HTML container element for the waveview instance.\n     *\n     * @var {Object}\n     */\n    _container;\n\n    /**\n     * The HTML container element for the canvas element.\n     *\n     * @var {Object}\n     */\n    _waveContainer;\n\n    /**\n     * The HTML canvas element context.\n     *\n     * @var {Object}\n     */\n    _canvasContext;\n\n    /**\n     * The color variations that will be used for drawing the waveform.\n     *\n     * @var {Object};\n     */\n    _colors;\n\n    /**\n     * The progress in the range [0-1] of the waveform.\n     *\n     * @var {Number}\n     */\n    _progress = 0;\n\n    /**\n     * Initialize a new waveview instance.\n     *\n     * @param  {Array} data\n     * @param  {Object} options\n     * @returns {void}\n     */\n    constructor(data, options) {\n        // Create a new mediator if there does not exist one yet\n        if (!WavePlayer._mediator) {\n            WavePlayer._mediator = new Mediator;\n        }\n\n        if (data) this.drawWave(data, 0);\n        this._options = {...this._defaultOptions, ...options};\n        this.container = 'string' === typeof this._options.container\n            ? document.querySelector(this._options.container)\n            : this._options.container;\n\n        this._createWaveContainer();\n        this._colors = this._createColorVariations();\n        this._initializeResizeHandler();\n    }\n\n    /************************\n     * Getters and setters. *\n     ************************/\n\n    /**\n     * Get the HTML container element for the waveview instance.\n     *\n     * @returns {Object}\n     */\n    get container() {\n        return this._container;\n    }\n\n    /**\n     * Set the HTML container element for the waveview instance.\n     *\n     * @param  {Object} container\n     * @returns {void}\n     */\n    set container(container) {\n        if (!container) {\n            throw new Error('Please supply a valid container element');\n        }\n\n        this._container = container;\n    }\n\n    /**\n     * Get the waveform amplitude data.\n     *\n     * @returns {Array}\n     */\n    get data() {\n        return this._data;\n    }\n\n    /**\n     * Set the waveform amplitude data.\n     *\n     * @param  {Array} values\n     * @returns {void}\n     */\n    set data(values) {\n        this._data = values;\n    }\n\n    /**\n     * Check if we can currently interact with the waveview instance.\n     *\n     * @returns {boolean}\n     */\n    get interact() {\n        return this._options.interact;\n    }\n\n    /**\n     * Set the interaction state of the waveview instance.\n     *\n     * @param  {boolean} value\n     * @returns {void}\n     */\n    set interact(value) {\n        this._options.interact = value;\n        if (value) {\n            this._addCanvasHandlers();\n        } else {\n            this._removeCanvasHandlers();\n        }\n    }\n\n    /**\n     * Check if the waveview instance is operating in responsive mode.\n     *\n     * @returns {boolean}\n     */\n    get responsive() {\n        return this._options.responsive;\n    }\n\n    /**\n     * Make the waveview instance responsive, meaning its width will scale along\n     * with the width of its parent container.\n     *\n     * @param  {boolean} value\n     * @returns {void}\n     */\n    set responsive(value) {\n        this._options.responsive = value;\n        this._initializeResizeHandler();\n    }\n\n    /**\n     * Get the width of the drawn waveform.\n     *\n     * @returns {number}\n     */\n    get width() {\n        return this._waveContainer.clientWidth;\n    }\n\n    /**\n     * Set the width of the drawn waveform. Only has an effect if the waveview\n     * instance is not operating in responsive mode.\n     *\n     * @param  {number} value\n     * @returns {void}\n     */\n    set width(value) {\n        this._options.width = value;\n        if (!this._options.responsive) {\n            style(this._waveContainer, {width: `${this._options.width}px`});\n            style(this._canvasContext.canvas, {width: `${this._options.width}px`});\n            this._canvasContext.canvas.width = this._options.width;\n            this._barData = this._calcAvgAmps();\n        }\n    }\n\n    /**\n     * Get the height of the drawn waveform.\n     *\n     * @returns {number}\n     */\n    get height() {\n        return this._waveContainer.clientHeight;\n    }\n\n    /**\n     * Set the height of the drawn waveform.\n     *\n     * @param  {number} value\n     * @returns {void}\n     */\n    set height(value) {\n        this._options.height = value;\n        style(this._waveContainer, {height: `${this._options.height}px`});\n        style(this.canvasContext.canvas, {height: `${this._options.height}px`});\n        this._canvasContext.canvas.height = this._options.height;\n        this._barData = this._calcAvgAmps();\n    }\n\n    /**\n     * Get the flag for if the waveform is drawn with a gradient.\n     *\n     * @returns {boolean}\n     */\n    get useGradient() {\n        return this._options.useGradient;\n    }\n\n    /**\n     * Set the flag for if the waveform is drawn with a gradient.\n     *\n     * @param  {boolean} value\n     * @returns {void}\n     */\n    set useGradient(value) {\n        this._options.useGradient = value;\n    }\n\n    /*********************\n     * Public functions. *\n     *********************/\n\n    /**\n     * Draw a waveform from supplied waveform data.\n     *\n     * @param  {Array} values\n     * @param  {number} progress\n     * @returns {void}\n     */\n    drawWave(values, progress) {\n        this._data = values;\n        this._progress = progress;\n        this._barData = this._calcAvgAmps();\n        this.clearWave();\n        this._drawBars(this._progress * this._waveContainer.clientWidth);\n    }\n\n    /**\n     * Update an existing waveform.\n     *\n     * @param  {number} progress\n     * @returns {void}\n     */\n    updateWave(progress) {\n        if (progress) {\n            this._progress = progress;\n        }\n        this.clearWave();\n        this._drawBars(this._progress * this._waveContainer.clientWidth);\n    }\n\n    /**\n     * Clear the canvas HTML element where the waveform is drawn in.\n     *\n     * @returns {void}\n     */\n    clearWave() {\n        this._canvasContext\n            .clearRect(\n                0,\n                0,\n                this._canvasContext.canvas.width,\n                this._canvasContext.canvas.height\n            );\n    }\n\n    /**\n     * Destroy the waveview instance and do the appropriate clean up.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        this._removeCanvasHandlers();\n        if (this._resizeHandler) {\n            window.removeEventListener('resize', this._resizeHandler);\n        }\n        WavePlayer._mediator.unAll();\n        this._waveContainer && this._container.removeChild(this._waveContainer);\n        this._waveContainer = null;\n    }\n\n    /**********************\n     * Private functions. *\n     **********************/\n\n    /**\n     * Create the HTML container element for the HTML canvas element in which we\n     * will draw the waveform.\n     *\n     * @returns {void}\n     */\n    _createWaveContainer() {\n        this._waveContainer = document.createElement('div');\n        this._waveContainer.className = 'waveform-container';\n        this._container.appendChild(this._waveContainer);\n        style(this._waveContainer, {\n            display: 'block',\n            position: 'relative',\n            width: this._options.responsive ? '100%' : `${this._options.width}px`,\n            height: `${this._options.height}px`,\n            overflow: 'hidden'\n        });\n        this._createCanvas();\n    }\n\n    /**\n     * Create the HTML canvas element in which we will draw the waveform.\n     *\n     * @returns {void}\n     */\n    _createCanvas() {\n        const {clientWidth} = this._waveContainer;\n        const canvas = this._waveContainer.appendChild(\n            style(document.createElement('canvas'), {\n                position: 'absolute',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n                height: `${this._options.height}px`,\n                width: `${clientWidth}px` // For responsive, enough to set this to 100% ???\n            })\n        );\n        this._canvasContext = canvas.getContext('2d');\n        this._canvasContext.canvas.width = clientWidth;\n        this._canvasContext.canvas.height = this._options.height;\n        if (this._options.interact) {\n            this._addCanvasHandlers();\n        }\n    }\n\n    /**\n     * Add a canvas click handler.\n     *\n     * @returns {void}\n     */\n    _addCanvasHandlers() {\n        this._mouseClickHandler = e => (\n            WavePlayer._mediator\n                .fire('waveview:clicked', this._coord2Progress(e))\n        );\n        this._canvasContext.canvas\n            .addEventListener('click', this._mouseClickHandler.bind(this));\n    }\n\n    /**\n     * Remove the canvas click handler.\n     *\n     * @returns {void}\n     */\n    _removeCanvasHandlers() {\n        if (this._mouseClickHandler) {\n            this.canvasContext.canvas\n                .removeEventListener('click', this._mouseClickHandler);\n        }\n    }\n\n    /**\n     * Create a color stop variation for the colors provided (used for drawing\n     * the gradient).\n     *\n     * @returns {Object}\n     */\n    _createColorVariations() {\n        const colors = {waveColor: [], progressColor: []};\n\n        for (const c in colors) {\n            let tmp = hex2rgb(this._options[c]);\n            colors[c].push(tmp);\n            tmp = rgb2hsv(tmp);\n            colors[c].push(hsv2rgb({h: tmp.h, s: tmp.s, v: tmp.v * 1.4}));\n        }\n\n        colors.dc = {\n            r: colors.waveColor[0].r - colors.progressColor[0].r,\n            g: colors.waveColor[0].g - colors.progressColor[0].g,\n            b: colors.waveColor[0].b - colors.progressColor[0].b\n        };\n\n        return colors;\n    }\n\n    /**\n     * Initialize the resize handler for the waveview. If the waveview instance\n     * is not in responsive mode we do nothing on a resize event, meaning the\n     * wave will not be redrawn. If we are in responsive mode the width of the\n     * canvas is rescaled and hence the waveform needs to be redrawn after this.\n     *\n     * @returns {void}\n     */\n    _initializeResizeHandler() {\n        if (!this._options.responsive) {\n            if (this._resizeHandler) {\n                window.removeEventListener('resize', this._resizeHandler);\n            }\n            style(this._waveContainer, {width: this._options.width});\n\n            return;\n        }\n\n        style(this._waveContainer, {width: '100%'});\n\n        if (this._resizeHandler) {\n            window.removeEventListener('resize', this._resizeHandler);\n        }\n\n        this._resizeHandler = () => {\n            const width = this._waveContainer.clientWidth;\n            style(this._canvasContext.canvas, {width: `${width}px`});\n            this._canvasContext.canvas.width = width;\n            this._barData = this._calcAvgAmps();\n            this.updateWave(this._progress);\n        };\n        window.addEventListener('resize', this._resizeHandler);\n    }\n\n    /**\n     * Compute average absolute waveform amplitudes.\n     *\n     * @returns {Object}\n     */\n    _calcAvgAmps() {\n        // Compute amplitude by averaging over n values in the range\n        // [rangeL, rangeR]\n        const avgAmp = (dataIndex, rangeL, rangeR, n) => {\n            let sum = 0.0;\n            for (let i = rangeL; i <= rangeR; i++) {\n                sum += Math.abs(this._data[dataIndex + i]);\n            }\n\n            return sum / n;\n        };\n\n        const totalWidth = this._waveContainer.clientWidth;\n        const ratio = totalWidth !== this._data.length\n            ? this._data.length / totalWidth\n            : 1;\n        const totalBarWidth = this._options.barWidth + this._options.barGap;\n        let rangeR = (totalBarWidth - 1) / 2;\n        const rangeL = -~~rangeR;\n        const incr = totalBarWidth * ratio;\n        const bd = {amps: [], x: []};\n        rangeR = Math.round(rangeR);\n\n        bd.amps.push(avgAmp(0, 0, rangeR, totalBarWidth));\n        bd.x.push(0);\n        let i, j;\n        for (i = totalBarWidth, j = incr; j + rangeR < this._data.length; i += totalBarWidth, j += incr) {\n            bd.amps.push(avgAmp(~~j, rangeL, rangeR, totalBarWidth));\n            bd.x.push(i);\n        }\n\n        // See if we can squeeze in one more bar\n        j = ~~j;\n        rangeR = -(j - this._data.length + 1);\n        if (i <= totalWidth - totalBarWidth && rangeR > rangeL) {\n            bd.amps.push(avgAmp(j, rangeL, rangeR, rangeR - rangeL));\n            bd.x.push(i);\n        }\n\n        bd.norm = 1 / Math.max.apply(Math, bd.amps);\n\n        return bd;\n    }\n\n    /**\n     * Draw the individual waveform bars with a gradient.\n     *\n     * @param  {number} progressCoord\n     * @returns {void}\n     */\n    _drawBars(progressCoord) {\n        if (!this._barData) return;\n\n        const ctx = this._canvasContext;\n        const h0 = ctx.canvas.height;\n        const totalBarWidth = this._options.barWidth + this._options.barGap;\n        let changeGrad = true;\n        ctx.fillStyle = this._options.useGradient\n            ? this._generateGradient(this._colors.progressColor, h0)\n            : this._generateColor(this._colors.progressColor[0]);\n\n        for (let i = 0; i < this._barData.x.length; i++) {\n            const xpos = this._barData.x[i];\n            if (xpos >= progressCoord - totalBarWidth && changeGrad) {\n                if (xpos >= progressCoord) { // gradient rule for bars after currently playing bar\n                    ctx.fillStyle = this._options.useGradient\n                        ? this._generateGradient(this._colors.waveColor, h0)\n                        : this._generateColor(this._colors.waveColor[0]);\n                    changeGrad = false; // more efficient: avoids changing this gradient rule multiple times per single function call\n                } else { // fade between colors when on currently playing bar\n                    const incr = (progressCoord - xpos) / totalBarWidth;\n                    const c1 = {\n                        r: this._colors.waveColor[0].r - this._colors.dc.r * incr,\n                        g: this._colors.waveColor[0].g - this._colors.dc.g * incr,\n                        b: this._colors.waveColor[0].b - this._colors.dc.b * incr\n                    };\n\n                    let c2 = null;\n                    if (this._options.useGradient) {\n                        c2 = rgb2hsv(c1);\n                        c2 = hsv2rgb({h: c2.h, s: c2.s, v: c2.v * 1.4});\n                    }\n\n                    ctx.fillStyle = this._options.useGradient\n                        ? this._generateGradient([c1, c2], h0)\n                        : this._generateColor(c1);\n                }\n            }\n            const h = Math.max(h0 * this._barData.amps[i] * this._barData.norm, 0.5);\n            ctx.fillRect(xpos, (h0 - h) / 2, this._options.barWidth, h);\n        }\n    }\n\n    /**\n     * Generate a linear gradient from the provided colors.\n     *\n     * @param  {Array} c\n     * @param  {number} h\n     * @returns {Object}\n     */\n    _generateGradient(c, h) {\n        const grd = this._canvasContext.createLinearGradient(0, 0, 0, h);\n        const c1 = `rgba(${~~c[1].r}, ${~~c[1].g}, ${~~c[1].b}, 1)`;\n        grd.addColorStop(0.0, c1);\n        grd.addColorStop(0.3, `rgba(${~~c[0].r}, ${~~c[0].g}, ${~~c[0].b}, 1)`);\n        grd.addColorStop(1.0, c1);\n\n        return grd;\n    }\n\n    /**\n     * Generate a CSS color string from a given color object.\n     *\n     * @param  {Object} c\n     * @returns {string}\n     */\n    _generateColor(c) {\n        return `rgb(${~~c.r}, ${~~c.g}, ${~~c.b})`;\n    }\n\n    /**\n     * Calculate the x-coordinate of the current mouse position. The origin is\n     * assumed to be at the location of the waveform container HTML element.\n     *\n     * @param  {MouseEvent} e\n     * @returns {number}\n     */\n    _calcMouseCoordX(e) {\n        e.preventDefault();\n        return e.clientX - this._waveContainer.getBoundingClientRect().left;\n    }\n\n    /**\n     * Convert a coordinate to a progress in the range [0-1].\n     *\n     * @param  {MouseEvent} e\n     * @returns {number}\n     */\n    _coord2Progress(e) {\n        return this._calcMouseCoordX(e) / this._waveContainer.clientWidth;\n    }\n\n}\n\nexport default WaveView;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Playlist.js\n *\n * © Michaël Dzjaparidze 2018\n * https://github.com/michaeldzjap\n *\n * Playlist functionality for waveplayer.js\n *\n * This work is licensed under the ISC License (ISC)\n */\n\nimport Mediator from './Mediator.js';\nimport WavePlayer from './WavePlayer.js';\nimport {stateResolver, isObject} from './lib/index.js';\n\nclass Playlist {\n\n    /**\n     * The default options for a new instance.\n     *\n     * @var {Object}\n     */\n    _defaultOptions = {\n        autoPlay: false\n    };\n\n    /**\n     * The options for this playlist instance.\n     *\n     * @var {Object}\n     */\n    _options;\n\n    /**\n     * The scheduler instance used for handling a playlist.\n     *\n     * @var {Object}\n     */\n    _scheduler;\n\n    /**\n     * The waveplayer instance associated with this playlist instance.\n     *\n     * @var {WavePlayer}\n     */\n    _wavePlayer;\n\n    /**\n     * The URL's pointing to the audio files that make up the playlist.\n     *\n     * @var {Array}\n     */\n    _urls;\n\n    /**\n     * The HTML audio element associated with a waveplayer instance.\n     *\n     * @var {audio}\n     */\n    _audioElm;\n\n    /**\n     * The index of the current track that is selected in the playlist.\n     *\n     * @var {Number}\n     */\n    _currentTrackIndex;\n\n    /**\n     * Indicates if the user skipped to a different track in the playlist.\n     *\n     * @var {boolean}\n     */\n    _skipped = false;\n\n    /**\n     * Initialize a new playlist instance.\n     *\n     * @param  {Object} wavePlayer\n     * @param  {Array} urls\n     * @param  {Object} options\n     * @returns {void}\n     */\n    constructor(wavePlayer, urls, options = {}) {\n        if (!urls || !(urls instanceof Array)) {\n            throw new TypeError('Argument \\'urls\\' is invalid.');\n        }\n\n        if (urls.length === 0) {\n            throw new Error(\n                'Argument \\'urls\\' needs to contain at least 1 item.'\n            );\n        }\n\n        if (!isObject(options)) {\n            throw new TypeError('Argument \\'options\\' is invalid.');\n        }\n\n        // Create a new mediator if there does not exist one yet\n        if (!WavePlayer._mediator) {\n            WavePlayer._mediator = new Mediator;\n        }\n\n        // Merge any supplied options with default options\n        this._options = {...this._defaultOptions, ...options};\n        this._wavePlayer = wavePlayer;\n        this._urls = urls;\n        this._audioElm = this._wavePlayer._audioElm;\n        this._scheduler = this._createScheduler(urls, this._options.autoplay);\n    }\n\n    /**\n     * Go to the next track in the playlist.\n     *\n     * @returns {void}\n     */\n    next() {\n        if (this._currentTrackIndex < this._urls.length) {\n            this._skipped = true;\n            this._audioElm.dispatchEvent(new Event('ended'));\n        }\n    }\n\n    /**\n     * Go to the previous track in the playlist.\n     *\n     * @returns {void}\n     */\n    previous() {\n        if (this._currentTrackIndex > 0) {\n            this._currentTrackIndex -= 2;\n            this._skipped = true;\n            this._audioElm.dispatchEvent(new Event('ended'));\n        }\n    }\n\n    /**\n     * Skip to a specific track in the playlist.\n     *\n     * @param  {number} trackNumber\n     * @returns {void}\n     */\n    skipTo(trackNumber) {\n        const trackIndex = trackNumber - 1;\n        if (trackIndex !== this._currentTrackIndex\n            && trackIndex < this._urls.length && trackIndex >= 0) {\n            this._currentTrackIndex = trackIndex - 1;\n            this._skipped = true;\n            this._audioElm.dispatchEvent(new Event('ended'));\n        }\n    }\n\n    /**\n     * Destroy the playlist instance and do the appropriate clean up.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        this._wavePlayer.pause();\n        this._scheduler = null;\n    }\n\n    /**\n     * Create a new scheduler for the playlist instance.\n     *\n     * @param  {Array} urls\n     * @param  {boolean} autoPlay\n     * @returns {Promise}\n     */\n    _createScheduler(urls, autoPlay) {\n        this._currentTrackIndex = 0;\n        const scheduler = stateResolver((function *(urls, me) { // eslint-disable-line\n            while (me._currentTrackIndex < urls.length) {\n                const {url, data} = isObject(urls[me._currentTrackIndex])\n                    ? urls[me._currentTrackIndex]\n                    : {url: urls[me._currentTrackIndex], data: null};\n\n                yield me._wavePlayer.load(url, data);\n\n                if (me._currentTrackIndex > 0) {\n                    WavePlayer._mediator.fire(\n                        'waveplayer:playlist:next',\n                        me._wavePlayer,\n                        {\n                            url: urls[me._currentTrackIndex],\n                            trackNumber: me._currentTrackIndex + 1\n                        }\n                    );\n                    me._wavePlayer.play();\n                } else {\n                    WavePlayer._mediator\n                        .fire('waveplayer:playlist:ready', me._wavePlayer);\n                    if (autoPlay || me._skipped) me._wavePlayer.play();\n                }\n\n                // Wait until the current track finishes playing\n                yield me._onEnd();\n                me._currentTrackIndex++;\n            }\n\n            return me._currentTrackIndex;\n        }));\n\n        scheduler(urls, this).then(\n            response => {\n                this._skipped = false;\n                WavePlayer._mediator\n                    .fire(\n                        'waveplayer:playlist:finished',\n                        this._wavePlayer,\n                        response\n                    );\n            }\n        );\n\n        return scheduler;\n    }\n\n    /**\n    * Return a promise that resolves itself when the HTML audio element fires an\n    * 'ended' event (i.e. when an audio track finished playing).\n    *\n    * @returns {Promise}\n    */\n    _onEnd() {\n        return new Promise(resolve => {\n            if (this._ended) {\n                this._audioElm.removeEventListener('ended', this._ended);\n            }\n            this._ended = () => resolve('ended');\n            this._audioElm.addEventListener('ended', this._ended.bind(this));\n        });\n    }\n\n}\n\nexport default Playlist;\n","/**\n * WavePlayer.js\n *\n * © Michaël Dzjaparidze 2018\n * https://github.com/michaeldzjap\n *\n * A HTML5 based audio player with a waveform view\n *\n * This work is licensed under the ISC License (ISC)\n */\n\nimport Mediator from './Mediator.js';\nimport WaveView from './WaveView.js';\nimport Playlist from './Playlist.js';\nimport {getJSON, isString, isObject} from './lib/index.js';\n\nclass WavePlayer {\n\n    /**\n     * The default options for a new instance.\n     *\n     * @var {Object}\n     */\n    _defaultOptions = {\n        preload: 'metadata'\n    };\n\n    /**\n     * The options for this waveplayer instance.\n     *\n     * @var {Object}\n     */\n    _options;\n\n    /**\n     * The mediator singleton that will be used to listen to events and fire\n     * actions in response.\n     *\n     * @var {Object}\n     */\n    static _mediator;\n\n    /**\n     * The waveview instance associated with this waveplayer instance.\n     *\n     * @var {Object}\n     */\n    _waveView;\n\n    /**\n     * The HTML audio element associated with this waveplayer instance.\n     *\n     * @var {audio}\n     */\n    _audioElm;\n\n    /**\n     * The playlist instance.\n     *\n     * @var {Playlist}\n     */\n    _playlist;\n\n    /**\n     * The position of the playback header relative to the duration of the\n     * currently playing track\n     *\n     * @var {number}\n     */\n    _currentTime;\n\n    /**\n     * The waveform amplitude data.\n     */\n\n    /**\n     * Initialize a new waveplayer instance.\n     *\n     * @param  {Object} options\n     * @returns {void}\n     */\n    constructor(options) {\n        // Create a new mediator if there does not exist one yet\n        if (!WavePlayer._mediator) WavePlayer._mediator = new Mediator;\n\n        this._options = {...this._defaultOptions, ...options};\n        this._waveView = new WaveView(null, {...this._options});\n\n        Promise.all([\n            this._initializeAudioElm(),\n            this._initializeWaveViewInteraction()\n        ])\n            .then(() => (\n                WavePlayer._mediator.fire('waveplayer:initialized', this)\n            ));\n    }\n\n    /************************\n     * Getters and setters. *\n     ************************/\n\n    /**\n     * Get the current volume of the currently loaded / playing track.\n     *\n     * @returns {number}\n     */\n    get volume() {\n        return this._audioElm.volume;\n    }\n\n    /**\n     * Set the current volume of the currently loaded / playing track.\n     *\n     * @param  {number} value\n     * @returns {void}\n     */\n    set volume(value) {\n        this._audioElm.volume = value;\n    }\n\n    /**\n     * Check if we can currently interact with the assocated waveview instance.\n     *\n     * @returns {boolean}\n     */\n    get interact() {\n        return this._waveView.interact;\n    }\n\n    /**\n     * Set the interaction state of the associated waveview instance.\n     *\n     * @param  {boolean} value\n     * @returns {void}\n     */\n    set interact(value) {\n        this._waveView.interact = value;\n    }\n\n    /**\n     * Check if the associated waveview instance is operating in responsive\n     * mode.\n     *\n     * @returns {boolean}\n     */\n    get responsive() {\n        return this._waveView.responsive;\n    }\n\n    /**\n     * Make the associated waveview instance responsive, meaning its width will\n     * scale along with the width of its parent container.\n     *\n     * @param  {boolean} value\n     * @returns {void}\n     */\n    set responsive(value) {\n        this._waveView.responsive = value;\n    }\n\n    /**\n     * Get the playlist instance associated with this waveplayer instance.\n     *\n     * @returns {null|Playlist}\n     */\n    get playlist() {\n        if (this._playlist) {\n            return this._playlist;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the position of the playback header relative to the duration of the\n     * currently loaded / playing track.\n     *\n     * @returns {number}\n     */\n    get currentTime() {\n        return this._currentTime;\n    }\n\n    /**\n     * Get the duration of the currently loaded / playing track.\n     *\n     * @returns {number}\n     */\n    get duration() {\n        return this._audioElm.duration;\n    }\n\n    /*********************\n     * Public functions. *\n     *********************/\n\n    /**\n     * Load an audio file and return a promise which may be used to perform an\n     * action when the audio has finished loading.\n     *\n     * @param  {string} url\n     * @param  {Object|Array|null} data\n     * @returns {Promise}\n     */\n    load(url, data = null) {\n        return Promise.all([\n            this.loadAudio(url),\n            this.loadWaveform(data || this._jsonUrl(url)),\n        ]);\n    }\n\n    /**\n     * Load the audio from the given URL.\n     *\n     * @param  {string} url\n     * @returns {Promise}\n     */\n    loadAudio(url) {\n        return new Promise(resolve => {\n            this._audioElm.src = url;\n            this._audioElm.load();\n            this._currentTime = 0;\n            WavePlayer._mediator.on('waveplayer:canplay', () => resolve());\n        });\n    }\n\n    /**\n     * Load the waveform data from a given URL to a JSON file or explicitly\n     * provided waveform data.\n     *\n     * @param  {string|Object|Array} data\n     * @returns {Promise}\n     */\n    loadWaveform(data) {\n        if (isString(data)) {\n            // If the data is a URL, fetch the data before drawing\n            return this._getWaveformData(data);\n        }\n\n        // Otherwise just draw the wave using the given data\n        return Promise.resolve(this._waveView.drawWave(\n            isObject(data) ? [...data[Object.keys(data)[0]]] : [...data],\n            0\n        ));\n    }\n\n    /**\n     * Start audio playback.\n     *\n     * @returns {void}\n     */\n    play() {\n        this._audioElm.play();\n    }\n\n    /**\n     * Pause audio playback.\n     *\n     * @returns {void}\n     */\n    pause() {\n        this._audioElm.pause();\n    }\n\n    /**\n     * Move the playback header to a specific time in the audio file.\n     *\n     * @param  {number} seconds\n     * @returns {void}\n     */\n    skipTo(seconds) {\n        this._audioElm.currentTime = seconds;\n    }\n\n    /**\n     * Check if audio is currently playing.\n     *\n     * @returns {boolean}\n     */\n    isPlaying() {\n        return !this._audioElm.paused;\n    }\n\n    /**\n     * Subscribe to a waveplayer.js event.\n     *\n     * @param  {string} topic\n     * @param  {Function} fn\n     * @returns {void}\n     */\n    on(topic, fn) {\n        WavePlayer._mediator.on(topic, fn);\n    }\n\n    /**\n     * Unsubscibe from a waveplayer.js event.\n     *\n     * @param  {string} topic\n     * @param  {Function} fn\n     * @returns {void}\n     */\n    un(topic, fn) {\n        WavePlayer._mediator.un(topic, fn);\n    }\n\n    /**\n     * Create a new playlist.\n     *\n     * @param  {Array} urls\n     * @param  {Object} options\n     * @returns {Playlist}\n     */\n    createPlaylist(urls, options = {}) {\n        // Cancel current playlist before starting a new one\n        this.cancelPlaylist();\n        this._playlist = new Playlist(this, urls, options);\n\n        return this._playlist;\n    }\n\n    /**\n     * Cancel a playlist.\n     *\n     * @returns {void}\n     */\n    cancelPlaylist() {\n        if (this._playlist) {\n            this._playlist.destroy();\n        }\n    }\n\n    /**\n     * Destroy the waveplayer instance and do the appropriate clean up.\n     *\n     * @returns {void}\n     */\n    destroy() {\n        this.pause();\n        this.cancelPlaylist();\n        WavePlayer._mediator.unAll();\n        if (this._audioElm) {\n            this._audioElm.removeEventListener('canplay', this._canplayHandler);\n            this._audioElm.removeEventListener('error', this._errorHandler);\n            this._audioElm.removeEventListener('timeupdate', this._timeUpdateHandler);\n            if (this._ended) {\n                this._audioElm.removeEventListener('ended', this._ended);\n            }\n            this._audioElm.parentNode\n                && this._audioElm.parentNode.removeChild(this._audioElm);\n            this._audioElm = null;\n        }\n        this._waveView.destroy();\n    }\n\n    /**********************\n     * Private functions. *\n     **********************/\n\n    /**\n     * Initialize the interaction with the associated waveview instance by\n     * attaching a click handler to the 'waveview:clicked' event.\n     *\n     * @returns {Promise}\n     */\n    _initializeWaveViewInteraction() {\n        return Promise.resolve((() => {\n            if (this._onClickHandler) {\n                WavePlayer._mediator.un('waveview:clicked', this._onClickHandler);\n            }\n\n            // The 'waveview:clicked' event passes along a number in the range\n            // [0-1] that indicates the position of the click relative to the\n            // starting point of the waveform\n            this._onClickHandler = progress => {\n                if (this.isPlaying()) {\n                    // Skip to new position in audio file if we are currently\n                    // playing something\n                    const time = this._progressToDuration(progress);\n                    this.skipTo(time);\n                    WavePlayer._mediator.fire('waveplayer:skipped', this, time);\n                }\n            };\n            WavePlayer._mediator.on(\n                'waveview:clicked',\n                this._onClickHandler.bind(this)\n            );\n        })());\n    }\n\n    /**\n     * Create and initialize the HTML audio element associated with this\n     * waveplayer instance.\n     *\n     * @returns {Promise}\n     */\n    _initializeAudioElm() {\n        return new Promise((resolve, reject) => {\n            if (this._waveView.container.querySelector('audio')) {\n                this._audioElm.removeEventListener(\n                    'canplay',\n                    this._canplayHandler\n                );\n                this._audioElm.removeEventListener('error', this._errorHandler);\n                this._audioElm.removeEventListener(\n                    'timeupdate',\n                    this._timeUpdateHandler\n                );\n                this._waveView.container.removeChild(this._audioElm);\n            }\n\n            // Create a new audio element and attach listeners\n            this._audioElm = this._createAudioElm();\n            this._waveView.container.appendChild(this._audioElm);\n\n            this._canplayHandler = () => {\n                WavePlayer._mediator.fire('waveplayer:canplay', this);\n                resolve('waveplayer:canplay');\n            };\n            this._audioElm.addEventListener(\n                'canplay',\n                this._canplayHandler.bind(this)\n            );\n\n            this._errorHandler = e => {\n                switch (e.target.error.code) {\n                    case e.target.error.MEDIA_ERR_ABORTED:\n                        reject(new Error('Fetching process aborted by user'));\n                        break;\n                    case e.target.error.MEDIA_ERR_NETWORK:\n                        reject(\n                            new Error(\n                                'There was a problem downloading the audio file'\n                            )\n                        );\n                        break;\n                    case e.target.error.MEDIA_ERR_DECODE:\n                        reject(\n                            new Error(\n                                'There was a problem decoding the audio file'\n                            )\n                        );\n                        break;\n                    case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                        reject(\n                            new Error(\n                                'Audio is not supported, check the provided URL'\n                            )\n                        );\n                        break;\n                    default:\n                        reject(new Error('An unknown error occurred'));\n                }\n            };\n            this._audioElm.addEventListener('error', this._errorHandler.bind(this));\n\n            this._timeUpdateHandler = e => {\n                this._currentTime = e.target.currentTime;\n                this._waveView\n                    .updateWave(this._durationToProgress(this._currentTime));\n            };\n            this._audioElm.addEventListener(\n                'timeupdate',\n                this._timeUpdateHandler.bind(this)\n            );\n        });\n    }\n\n    /**\n     * Create a new HTML audio element.\n     *\n     * @returns {audio}\n     */\n    _createAudioElm() {\n        const audioElm = document.createElement('audio');\n        audioElm.controls = false;\n        audioElm.autoplay = false;\n        audioElm.preload = this._options.preload;\n\n        return audioElm;\n    }\n\n    /**\n     * Get the waveform data for an audio file.\n     *\n     * @param  {string} url\n     * @returns {Promise}\n     */\n    _getWaveformData(url) {\n        return new Promise((resolve, reject) => {\n            getJSON(url)\n                .then(response => {\n                    this._waveView.drawWave(\n                        isObject(response)\n                            ? response[Object.keys(response)[0]]\n                            : response,\n                        0\n                    );\n                    resolve('waveplayer:json:fetched');\n                })\n                .catch(err => reject(err));\n        });\n    }\n\n    /**\n     * Convert a duration in seconds to a progress in the range [0-1].\n     *\n     * @param  {number} time\n     * @returns {number}\n     */\n    _durationToProgress(time) {\n        return time / this._audioElm.duration;\n    }\n\n    /**\n     * Convert a progress in the range [0-1] to a time in seconds.\n     *\n     * @param  {number} progress\n     * @returns {number}\n     */\n    _progressToDuration(progress) {\n        return progress * this._audioElm.duration;\n    }\n\n    /**\n     * Use the given URL to an audio file to determine the correct URL to the\n     * associated JSON file holding the waveform data.\n     *\n     * @param  {string} url\n     * @returns {string}\n     */\n    _jsonUrl(url) {\n        return `${url.substr(0, url.lastIndexOf('.'))}.json`;\n    }\n\n}\n\nexport default WavePlayer;\n"],"names":["_arrayWithoutHoles","arr","Array","isArray","i","arr2","length","_iterableToArray","iter","Symbol","iterator","Object","prototype","toString","call","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","nonIterableSpread","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_objectSpread","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","Mediator","_topics","topic","callback","this","hasOwnProperty","push","splice","args","apply","_typeof2","constructor","_typeof","module","hex2rgb","hex","bigint","parseInt","charAt","substring","r","g","b","rgb2hsv","rgb","h","v","Math","max","diff","min","diffc","c","s","round","rr","gg","bb","hsv2rgb","hsv","floor","data","getJSON","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","DONE","status","JSON","parse","responseText","Error","statusText","send","stateResolver","generatorFunction","generator","resume","method","result","done","then","resumeNext","resumeThrow","e","bind","style","elm","styles","isObject","type","isString","WaveView","options","container","width","height","waveColor","progressColor","barWidth","barGap","interact","responsive","progress","useGradient","WavePlayer","_mediator","drawWave","_options","_defaultOptions","document","querySelector","_createWaveContainer","_colors","_createColorVariations","_initializeResizeHandler","values","_data","_progress","_barData","_calcAvgAmps","clearWave","_drawBars","_waveContainer","clientWidth","_canvasContext","clearRect","canvas","_removeCanvasHandlers","_resizeHandler","window","removeEventListener","unAll","_container","removeChild","createElement","className","appendChild","display","position","overflow","_createCanvas","top","bottom","zIndex","getContext","_addCanvasHandlers","_mouseClickHandler","fire","_this","_coord2Progress","addEventListener","canvasContext","colors","tmp","dc","_this2","updateWave","j","avgAmp","dataIndex","rangeL","rangeR","n","sum","abs","_this3","totalWidth","ratio","totalBarWidth","incr","bd","amps","x","norm","progressCoord","ctx","h0","changeGrad","fillStyle","_generateGradient","_generateColor","xpos","c1","c2","fillRect","grd","createLinearGradient","addColorStop","preventDefault","clientX","getBoundingClientRect","left","_calcMouseCoordX","clientHeight","global","undefined","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","runtime","regeneratorRuntime","exports","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","next","object","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","tryEntries","resetTryEntry","isNaN","slice","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","state","protoGenerator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","fn","err","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","error","return","info","pushTryEntry","locs","iteratorMethod","Function","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","require$$0","Playlist","wavePlayer","urls","autoPlay","_wavePlayer","_urls","_audioElm","_scheduler","_createScheduler","autoplay","_currentTrackIndex","_skipped","dispatchEvent","Event","trackNumber","trackIndex","pause","scheduler","me","load","play","_onEnd","response","_ended","preload","_waveView","all","_initializeAudioElm","_initializeWaveViewInteraction","loadAudio","loadWaveform","_jsonUrl","src","_currentTime","on","_getWaveformData","seconds","currentTime","paused","un","cancelPlaylist","_playlist","destroy","_canplayHandler","_errorHandler","_timeUpdateHandler","parentNode","_onClickHandler","isPlaying","time","_progressToDuration","skipTo","_this4","_createAudioElm","code","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","_durationToProgress","audioElm","controls","_this5","duration","substr","lastIndexOf","volume"],"mappings":"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"}